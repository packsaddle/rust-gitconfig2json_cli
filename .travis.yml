# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=gitconfig2json_cli

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
#    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
#    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
#    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
#    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
#    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
#    - env: TARGET=aarch64-unknown-linux-gnu
#    - env: TARGET=armv7-unknown-linux-gnueabihf
#    - env: TARGET=mips-unknown-linux-gnu
#    - env: TARGET=mips64-unknown-linux-gnuabi64
#    - env: TARGET=mips64el-unknown-linux-gnuabi64
#    - env: TARGET=mipsel-unknown-linux-gnu
#    - env: TARGET=powerpc-unknown-linux-gnu
#    - env: TARGET=powerpc64-unknown-linux-gnu
#    - env: TARGET=powerpc64le-unknown-linux-gnu
#    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
#    - env: TARGET=x86_64-unknown-linux-gnu
#      rust: nightly
#    - env: TARGET=x86_64-apple-darwin
#      os: osx
#      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "uxNuxEZ95Bw8XdcJMhvPgEzI7iZ8Q0K6joFPjDoG20xUt/6P1OKvlWOSAUnmscEvfpQH93YlFazlAY7TDADMic8yZQ4UH3KQ291ACr6McEgwdVrbKJdklhdVOjwIevO3I63d/BwYR++N0jVav8H3MOw+2qQmr/lBShJRuIyMQI5guAbv/eCNPO/J2GFzOuld0jx3f0shx7kuzy6BO57xzCcDSsE/3B+6BTdnwk506Vc7DQbBjWJy5aoVKZ5ImKyiAccB/3iwFEOpLjfN4rq2bxOI+oPoHv1Xrl7fBwPPyLT+bm3nTsnn4Csc4G0r67g/16yI4hxS0ZwwSob13njlgVAra2FIaym2eLM+Yjtke0VMjDgWIdO20eW687UF2/fEZwpbz80AzWfnvHtFfhgeqnS4rsk2BQTz65brjheXCZ9XFrYE6kdojsY2PqIYpfYiiAf7/CNlhQz346Dm1/AFhKEz01WGRGl98IuFWy+wnD4fScpGRtYpxcK95cnaiWDrguRCqriszqvKwGUrABI7biPcr+06xZhXqDGQ5AHJo1lwmNMBqQj4CkCwBgKJMkNnxHbVQe/fwfr+/dG2n6G8VXpCuk4zH6pOccuSBW4AYQNlRvhPhyiaiUXAmwoGF8sH/5t7Ls7a7WipDgdQwEOEZG+bLn9m3xO9at1IXwBLdMM="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo
